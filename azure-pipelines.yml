trigger:
- main  # Replace with your branch name

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: BUILD & PUSH
    displayName: Build and push Stage
    jobs:
      - job: buildAndPush
        displayName: Build and push
        steps:
          - task: PowerShell@2
            displayName: Login to Docker registry
            inputs:
              script: |
                $username = $(secureFile('dockercredentials.securefile'))
                $password = $(secureFile('dockercredentials.securefile'))
                docker login -u $username -p $password
          - script: 
              docker build -t subhashchandra369/azuregitops:1.0 -f Azure-gitops/Dockerfile .
              docker push  docker push azuregitops:1.0
            

  - stage: DEV
    displayName: DEV environment 
    jobs:
      - deployment: deploy
        displayName: Pushing image from DEV environment
        environment: DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: Login to Docker registry, Build and push the image
                  inputs:
                    script: |
                      $username = $(secureFile('dockercredentials.securefile'))
                      $password = $(secureFile('dockercredentials.securefile'))
                      docker login -u $username -p $password
                - script: 
                    docker build -t subhashchandra369/azuregitops:2.0 -f Azure-gitops/Dockerfile .
                    docker push  docker push azuregitops:2.0

  - stage: STAGING
    displayName: STAGING environment
    dependsOn:
      - DEV
    jobs:
    - deployment: deploy
      displayName: Pushing image from STAGIN environment
      environment: STAGING
      strategy:
        runOnce:
          deploy:
            steps:
              - task: PowerShell@2
                displayName: Login to Docker registry, Build and push the image
                inputs:
                  script: |
                    $username = $(secureFile('dockercredentials.securefile'))
                    $password = $(secureFile('dockercredentials.securefile'))
                    docker login -u $username -p $password
              - script: 
                  docker build -t subhashchandra369/azuregitops:3.0 -f Azure-gitops/Dockerfile .
                  docker push  docker push azuregitops:3.0
                  
  - stage: PROD
    displayName: PROD environment where GitOps happens
    dependsOn:
      - STAGING 
    jobs:
      - job: waitForValidation
        displayName: Wait for external validation
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
            notifyUsers: |
              subhashchandrasc052
            instructions: 'Please validate the build configuration and resume'
            onTimeout: 'resume'

      - deployment: deploy
        displayName: Deploy to PROD
        dependsOn: waitForValidation
        environment: PROD
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: Login to Docker registry, Build and push the image
                  inputs:
                    script: |
                      $username = $(secureFile('dockercredentials.securefile'))
                      $password = $(secureFile('dockercredentials.securefile'))
                      docker login -u $username -p $password
                - script: |
                    docker tag azuregitops:1.0 subhashchandra369/azuregitops:4.0
                    docker push subhashchandra369/azuregitops:4.0
                  displayName: 'Pushing the image to PROD environment'
                - script: |
                    echo 'Updating Kubernetes deployment file...'
                    # Set git user configuration
                    git config --global user.email "subhashchandrasc052@gmail.com"
                    git config --global user.name "subhash36"
            
                    # Replace placeholder with current build number
                    IMAGE_TAG=4.0
                    sed -i "s/replaceImageTag/$IMAGE_TAG/g" Azure_Gitops/test.yaml
            
                    # Add and commit changes
                    git add Azure_Gitops/test.yaml
                    git commit -m "Update deployment image to version $BUILD_NUMBER"

                    # Modify the remote URL to point to the different repository
                    git remote set-url origin https://github.com/subhash36/Azure_GitOps_Argo.git
            
                    # Push changes to remote repository
                    git push origin HEAD:master 