
# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

# We're using the 'resources' to specify our Repo from where the GitOps takes place
resources:
  repositories:
  - repository: GitOpsRepo # The name used to reference your repository in the checkout step in PROD Environment -> Job = Update_K8S_Manifest
    type: github
    endpoint: GitHub_subhash36 # This is a service connection name. Please create one if you don't have by using PAT
    name: subhash36/Azure_GitOps_Argo

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e8cadd83-6ab8-468e-ae5c-6670ebb1fd0a'
  imageRepository: 'azuregitops'
  containerRegistry: 'mycr07.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Azure-gitops/Dockerfile'
  tag: '$(Build.BuildId)' # This is a special variable that Azure Devops provides us for creating unique build numbers in each Stage automatically

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: DEV
  displayName: DEV Environment
  jobs:
  - job: Build_Push
    displayName: Build_Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

  - job: PR_from_DEV
    displayName: PR_DEV
    pool: server
    timeoutInMinutes: 4320
    steps:
    - script: |
        POST https://dev.azure.com/fabrikam/_apis/git/repositories/3411ebc1-d5aa-464f-9615-0b527bc66719/pullrequests?api-version=7.1-preview.1

        {
          "sourceRefName": "refs/heads/$(Build.SourceBranch)",
          "targetRefName": "refs/heads/STAGING_branch", # Replace with your target branch (Your next branch to test in)
          "title": "A new feature",
          "description": "Adding a new feature",
          "reviewers": [
            {
              "id": "reviewer_id"
            }
          ]
        }

      displayName: 'Automate PR Creation'

- stage: STAGING
  displayName: STAGING
  dependsOn: DEV
  jobs:
  - job: Build_Push
    displayName: Build_Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildandpush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    
  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev') )

    steps:
    - script: |
        POST https://dev.azure.com/fabrikam/_apis/git/repositories/3411ebc1-d5aa-464f-9615-0b527bc66719/pullrequests?api-version=7.1-preview.1

        {
          "sourceRefName": "refs/heads/$(Build.SourceBranch)",
          "targetRefName": "refs/heads/target_branch", # Replace with your target branch
          "title": "A new feature",
          "description": "Adding a new feature",
          "reviewers": [
            {
              "id": "reviewer_id"
            }
          ]
        }

      displayName: 'Automate PR Creation'

- stage: PROD
  displayName: PROD Environment
  dependsOn: STAGING
  jobs:

# Manual Approval Gate. You can find this Validation code in Azure Pipelines documentation
  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          subhashchandrasc052
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'resume'

# Build and push the Image with a 3rd image tag
  - job: Build_Push
    displayName: Build_Push
    dependsOn: waitForValidation
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: '$(Build.Repository.LocalPath)'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

# Update the K8S manifest files
  - job: UpdateK8SManifest
    displayName: Checking into GitOps repo
    pool:
      vmImage: $(vmImageName)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    steps:
    - checkout: GitOpsRepo
    - script: |
        BUILD_NUMBER=$(tag)
        if [ "$(Build.SourceBranch)" == "refs/heads/master" ]; then
          sed -i "s/replaceImageTag/$BUILD_NUMBER/g" Azure_Gitops/test.yaml
        elif [ "$(Build.SourceBranch)" == "refs/heads/staging" ]; then
          sed -i "s/replaceImageTag/$BUILD_NUMBER/g" Azure_Gitops/staging.yaml
        # Add conditions for other branches/environments as needed
        fi
      displayName: 'Update Image Tag in K8s Deploy File'

    - script: |
        git config user.email "subhashchandrasc052@gmail.com"
        git config user.name "subhash36"
        git add Azure_Gitops/*.yaml
        git commit -m "Update image tag in K8s deploy file"
        git push https://${GH_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:$(Build.SourceBranch)
      displayName: 'Commit and Push Changes'
      env:
        GH_TOKEN: $(gh.token)
        GIT_USER_NAME: subhash36
        GIT_REPO_NAME: Azure_GitOps_Argo
          