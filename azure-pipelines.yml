# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

# We're using the 'resources' to specify our Repo from where the GitOps takes place
resources:
  repositories:
  - repository: GitOpsRepo # The name used to reference your repository in the checkout step in PROD Environment -> Job = Update_K8S_Manifest
    type: github
    endpoint: GitHub_subhash36 # This is a service connection name. Please create one if you don't have by using PAT
    name: subhash36/Azure_GitOps_Argo

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e8cadd83-6ab8-468e-ae5c-6670ebb1fd0a'
  imageRepository: 'azuregitops'
  containerRegistry: 'mycr07.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Azure-gitops/Dockerfile'
  tag: '$(Build.BuildId)' # This is a special variable that Azure Devops provides us for creating unique build numbers in each Stage automatically

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: DEV
  displayName: DEV Environment
  jobs:
  - job: Build_Push
    displayName: Build_Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: STAGING
  displayName: STAGING
  dependsOn: DEV
  jobs:
  - job: Build_Push
    displayName: Build_Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: PROD
  displayName: PROD Environment
  dependsOn: STAGING
  jobs:
    - job: waitForValidation
      displayName: Wait for external validation
      pool: server
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          notifyUsers: |
            subhashchandrasc052
          instructions: 'Please validate the build configuration and resume'
          onTimeout: 'resume'

    - job: Build_Push
      displayName: Build_Push
      dependsOn: waitForValidation
      pool:
        vmImage: $(vmImageName)
      steps:
      - checkout: self
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: push
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          buildContext: '$(Build.Repository.LocalPath)'
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)

    - job: UpdateK8SManifest
      displayName: Checking into GitOps repo
      pool:
        vmImage: $(vmImageName)
      # First checkout to the Repo where the K8S manifest files are present.
      # The connection to that repo is mentioned in the Resources section 
      steps:
      - checkout: GitOpsRepo
      - script: |
          BUILD_NUMBER=$(tag)
          sed -i "s/replaceImageTag/$BUILD_NUMBER/g" Azure_Gitops/test.yaml
        displayName: 'Update Image Tag in K8s Deploy File'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) # Apply 'sed' only for master branch

      - script: |
          git config user.email "subhashchandrasc052@gmail.com"
          git config user.name "subhash36"
          git add Azure_Gitops/test.yaml
          git commit -m "Update image tag in K8s deploy file"
          git push https://${GH_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
        displayName: 'Commit and Push Changes'
        env:
          GH_TOKEN: $(gh.token)
          GIT_USER_NAME: subhash36
          GIT_REPO_NAME: Azure_GitOps_Argo
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) # Apply only for master branch
