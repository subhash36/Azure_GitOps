# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
  repositories:
  - repository: GitOpsRepo # The name used to reference your repository in the checkout step in PROD Environment -> Job = Update_K8S_Manifest
    type: github
    endpoint: GitHub_subhash36 # This is a service connection name. Please create one if you don't have by using PAT
    name: subhash36/Azure_GitOps_Argo

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '69bff256-560b-4d6f-a4ba-23ac53d3044c'
  imageRepository: 'azuregitops'
  containerRegistry: 'mycr07.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Azure-gitops/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: DEV
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'dockerImage'
        publishLocation: 'pipeline'

- stage: STAGING
  displayName: STAGING Environment
  dependsOn: DEV
  jobs:
  - job: Build_Push
    displayName: Build_Push
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - download: current
      artifact: 'dockerImage'

    - script: |
        TAG=$(Build.SourceBranchName)_$(tag)
        docker load -i $(Pipeline.Workspace)/dockerImage/$(imageRepository)_$(tag).tar
        docker tag $(containerRegistry)/$(imageRepository):$(tag) $(containerRegistry)/$(imageRepository):$(TAG)
        docker push $(containerRegistry)/$(imageRepository):$(TAG)
      displayName: 'Tag and Push'

- stage: PROD
  displayName: PROD Environment
  dependsOn: STAGING
  jobs:

# Manual Approval Gate. You can find this Validation code in Azure Pipelines documentation
  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          subhashchandrasc052
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'resume'

# Build and push the Image with a 3rd image tag
  - job: Build_Push
    displayName: Build_Push
    dependsOn: waitForValidation
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: '$(Build.Repository.LocalPath)'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

# Update the K8S manifest files
  - job: UpdateK8SManifest
    displayName: Checking into GitOps repo
    pool:
      vmImage: $(vmImageName)
    
    # First checkout to the Repo where the K8S manifest files are present.
    # The connection to that repo is mentioned in the Resouces section 
    steps:
    - checkout: GitOpsRepo
    - script: |
        BUILD_NUMBER=$(tag)
        sed -i "s/replaceImageTag/$BUILD_NUMBER/g" Azure_Gitops/test.yaml
      displayName: 'Update Image Tag in K8s Deploy File'

    - script: |
        git config user.email "subhashchandrasc052@gmail.com"
        git config user.name "subhash36"
        git add Azure_Gitops/test.yaml
        git commit -m "Update image tag in K8s deploy file"
        git push https://${GH_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
      displayName: 'Commit and Push Changes'
      env:
        GH_TOKEN: $(gh.token)
        GIT_USER_NAME: subhash36
        GIT_REPO_NAME: Azure_GitOps_Argo

        